composer require tymon/jwt-auth

Config/app.php
Providers
Tymon\JWTAuth\Providers\JWTAuthServiceProvider::class

aliases
'JWTAuth'   => Tymon\JWTAuth\Facades\JWTAuth::class,
'JWTFactory' => Tymon\JWTAuth\Facades\JWTFactory::class


command
php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\JWTAuthServiceProvider"
php artisan jwt:generate

kernal.php
 'jwt.auth' => \Tymon\JWTAuth\Middleware\GetUserFromToken::class,
 'jwt.refresh' => \Tymon\JWTAuth\Middleware\RefreshToken::class

route('jwt.auth')



 public function authenticate(Request $request)
    {
        $credentials = $request->only('email', 'password');

        try {
            // verify the credentials and create a token for the user
            if (! $token = JWTAuth::attempt($credentials)) {
                return response()->json(['error' => 'invalid_credentials'], 401);
            }
        } catch (JWTException $e) {
            // something went wrong
            return response()->json(['error' => 'could_not_create_token'], 500);
        }

        // if no errors are encountered we can return a JWT
        return response()->json(compact('token'));
}
